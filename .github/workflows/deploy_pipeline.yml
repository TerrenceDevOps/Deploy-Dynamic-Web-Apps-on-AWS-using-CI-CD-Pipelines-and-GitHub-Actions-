name: AWS Infrastructure Deployment

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-1
  TERRAFORM_ACTION: apply  # Can be changed to 'destroy'

jobs:
  deploy_infrastructure:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.extract_outputs.outputs.image_name }}
      rds_endpoint: ${{ steps.extract_outputs.outputs.rds_endpoint }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        working-directory: ./iac
        run: terraform init -input=false

      - name: Terraform Apply/Destroy
        working-directory: ./iac
        run: |
          if [ "${{ env.TERRAFORM_ACTION }}" = "apply" ]; then
            terraform plan -out=tfplan
            terraform apply -auto-approve tfplan
          else
            terraform destroy -auto-approve
          fi

      - name: Extract Terraform Outputs
        id: extract_outputs
        if: ${{ env.TERRAFORM_ACTION == 'apply' }}
        working-directory: ./iac
        run: |
          echo "image_name=$(terraform output -raw image_name || echo 'null')" >> $GITHUB_OUTPUT
          echo "rds_endpoint=$(terraform output -raw rds_endpoint || echo 'null')" >> $GITHUB_OUTPUT
          echo "domain_name=$(terraform output -raw domain_name || echo 'null')" >> $GITHUB_OUTPUT

      - name: Show Extracted Outputs
        run: |
          echo "Extracted outputs:"
          echo "Image Name: ${{ steps.extract_outputs.outputs.image_name }}"
          echo "RDS Endpoint: ${{ steps.extract_outputs.outputs.rds_endpoint }}"
          echo "Domain Name: ${{ steps.extract_outputs.outputs.domain_name }}"

  manage_ecr_repository:
    name: Manage ECR Repository
    needs: deploy_infrastructure
    if: ${{ needs.deploy_infrastructure.outputs.image_name != 'null' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create or Verify ECR Repository
        run: |
          REPO_NAME="${{ needs.deploy_infrastructure.outputs.image_name }}"
          
          # Check if repository exists
          if aws ecr describe-repositories --repository-names "$REPO_NAME" >/dev/null 2>&1; then
            echo "Repository $REPO_NAME already exists"
          else
            echo "Creating repository $REPO_NAME"
            aws ecr create-repository \
              --repository-name "$REPO_NAME" \
              --image-scanning-configuration scanOnPush=true \
              --encryption-configuration encryptionType=AES256
          fi