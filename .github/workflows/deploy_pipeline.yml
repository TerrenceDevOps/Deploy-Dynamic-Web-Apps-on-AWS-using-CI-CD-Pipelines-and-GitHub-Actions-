name: Deploy Pipeline

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-1
  TERRAFORM_ACTION: apply  # change to 'destroy' when needed

jobs:
  deploy_pipeline:
    name: Deploy AWS Infrastructure with Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - name: Terraform Init
        working-directory: ./iac
        run: terraform init

      - name: Terraform Apply/Destroy
        working-directory: ./iac
        run: terraform ${{ env.TERRAFORM_ACTION }} -auto-approve

      # Output extraction (only runs on 'apply')
      - name: Get Terraform outputs
        if: env.TERRAFORM_ACTION == 'apply'
        working-directory: ./iac
        run: |
          echo "IMAGE_NAME=$(terraform output -raw image_name)" >> $GITHUB_ENV
          echo "DOMAIN_NAME=$(terraform output -raw domain_name)" >> $GITHUB_ENV
          echo "RDS_ENDPOINT=$(terraform output -raw rds_endpoint)" >> $GITHUB_ENV
          echo "IMAGE_TAG=$(terraform output -raw image_tag)" >> $GITHUB_ENV
          echo "PRIVATE_DATA_SUBNET_AZ1_ID=$(terraform output -raw private_data_subnet_az1_id)" >> $GITHUB_ENV
          echo "RUNNER_SECURITY_GROUP_ID=$(terraform output -raw runner_security_group_id)" >> $GITHUB_ENV
          echo "TASK_DEFINITION_NAME=$(terraform output -raw task_definition_name)" >> $GITHUB_ENV
          echo "ECS_CLUSTER_NAME=$(terraform output -raw ecs_cluster_name)" >> $GITHUB_ENV
          echo "ECS_SERVICE_NAME=$(terraform output -raw ecs_service_name)" >> $GITHUB_ENV
          echo "ENVIRONMENT_FILE_NAME=$(terraform output -raw environment_file_name)" >> $GITHUB_ENV
          echo "ENV_FILE_BUCKET_NAME=$(terraform output -raw env_file_bucket_name)" >> $GITHUB_ENV

      - name: Print GITHUB_ENV contents
        run: cat $GITHUB_ENV
